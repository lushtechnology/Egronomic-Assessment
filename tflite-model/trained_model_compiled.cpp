/* Generated by Edge Impulse
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
// Generated on: 03.05.2021 20:15:51

#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/kernels/micro_ops.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#if defined __GNUC__
#define ALIGN(X) __attribute__((aligned(X)))
#elif defined _MSC_VER
#define ALIGN(X) __declspec(align(X))
#elif defined __TASKING__
#define ALIGN(X) __align(X)
#endif

namespace {

constexpr int kTensorArenaSize = 720;

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};
enum used_operators_e {
  OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};
struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};
struct NodeInfo_t { // subset of TfLiteNode used for initialization from constant memory
  struct TfLiteIntArray* inputs;
  struct TfLiteIntArray* outputs;
  void* builtin_data;
  used_operators_e used_op_index;
};

TfLiteContext ctx{};
TfLiteTensor tflTensors[11];
TfLiteRegistration registrations[OP_LAST];
TfLiteNode tflNodes[4];

const TfArray<2, int> tensor_dimension0 = { 2, { 1,612 } };
const TfArray<1, float> quant0_scale = { 1, { 1.0112549066543579, } };
const TfArray<1, int> quant0_zero = { 1, { -48 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const ALIGN(8) int32_t tensor_data1[20] = { 2, 0, -2, 0, 0, -2, -3, 0, -2, 0, -3, -3, -1, 2, 0, -3, 4, -1, -2, -2, };
const TfArray<1, int> tensor_dimension1 = { 1, { 20 } };
const TfArray<1, float> quant1_scale = { 1, { 0.00080421776510775089, } };
const TfArray<1, int> quant1_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant1 = { (TfLiteFloatArray*)&quant1_scale, (TfLiteIntArray*)&quant1_zero, 0 };
const ALIGN(8) int32_t tensor_data2[10] = { 0, 0, 1, 0, 0, 0, -1, 0, -1, 1, };
const TfArray<1, int> tensor_dimension2 = { 1, { 10 } };
const TfArray<1, float> quant2_scale = { 1, { 0.0033200194593518972, } };
const TfArray<1, int> quant2_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant2 = { (TfLiteFloatArray*)&quant2_scale, (TfLiteIntArray*)&quant2_zero, 0 };
const ALIGN(8) int32_t tensor_data3[2] = { 1, -1, };
const TfArray<1, int> tensor_dimension3 = { 1, { 2 } };
const TfArray<1, float> quant3_scale = { 1, { 0.0017249841475859284, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const ALIGN(8) int8_t tensor_data4[20*612] = { 
  -87, -86, -72, 17, -22, 11, -100, -90, -96, 21, 108, -59, -80, 105, 51, 121, 108, -38, 85, -79, 105, -107, 111, -87, -67, -72, -109, 52, -49, -41, -74, -109, 24, 109, 35, -49, -60, 80, 35, -9, 81, 119, 82, 61, -98, 39, -29, 58, -52, 18, 61, 98, -103, 96, 19, 24, 15, -21, -18, 5, 17, -34, -61, -30, -58, -31, 61, 53, -1, -88, 102, -71, -9, 8, -21, 115, 70, 90, -7, 69, 80, 57, 14, 80, -6, 31, -45, 41, -21, 85, 100, -94, 18, 64, 0, -38, 27, 45, 5, 119, -119, -61, 82, -60, -19, -95, 41, -93, 21, 34, 22, -15, -60, -13, -32, 4, 68, 20, -51, -22, 96, 57, 65, 113, 105, -111, 100, -67, 88, -85, 103, -114, -29, -64, 81, -36, -45, 122, 19, 70, 84, -40, -118, 60, 42, 115, 7, -82, 14, 60, 80, 54, -10, 56, 103, 89, 13, 24, -18, 104, -29, -53, -104, 86, -77, -111, 56, -99, -81, 118, -6, -22, -72, 80, 110, -78, 15, 50, 41, 115, 70, -77, 115, -91, -20, -98, -88, 87, -66, 42, 104, 120, -84, 109, -9, 71, -48, 56, 34, -57, -25, -98, 91, 76, 106, -30, 113, -100, -59, -74, 41, -33, 13, -53, 7, -24, -48, 27, -116, -95, 3, -112, 34, 83, 58, -74, -8, -30, 117, 106, -49, -22, 54, 68, 27, 13, 74, 32, 92, 91, -49, 44, -5, 26, 17, 112, 63, -22, 20, 105, -100, -97, -40, 3, -120, 10, -4, -13, 31, -5, 56, 64, 8, -5, 0, 111, -21, -36, -86, 59, 88, 102, -106, -99, 67, -93, 62, -62, 58, -53, -83, 123, 10, 88, -87, 118, 69, -99, 61, 57, 53, -62, -113, 119, 44, 80, 32, 18, 31, 37, -113, -46, 3, -58, -87, -19, -47, 27, -16, 30, 11, -109, 116, -34, 39, 3, -99, -44, -32, 110, 106, 75, 76, -83, 94, 43, 39, 49, -47, 13, 82, -86, -53, 74, -23, 97, 97, -75, -74, 92, 69, -92, -83, -99, -97, -20, -39, -62, 15, -70, 38, 19, -62, -119, -37, -11, 53, -14, -23, -42, 33, 11, 30, 68, -91, 3, -91, 37, -90, 109, -120, -55, -106, -3, 111, 120, -113, -52, 105, -90, -84, 123, -24, -55, 51, -76, -8, 84, -18, -20, -2, -60, 74, 100, 25, -86, -66, -124, 17, 36, -68, 7, -40, -112, 80, 113, 45, -58, -26, 97, -102, -108, 70, -121, 88, -55, -30, -81, 64, 59, -35, -78, -93, -50, -55, 121, -114, -101, 35, -18, -87, -73, -73, -79, -72, -35, 95, 48, 118, -25, -3, -71, 58, -22, 30, 72, 74, 36, -116, 8, -114, 35, -61, -41, 57, -1, -43, -107, 58, 36, 95, -81, -26, 59, -16, -116, 24, 41, 47, 114, -58, 38, -53, 51, -113, -13, -16, -8, -25, -40, 43, 49, -18, -60, -99, -22, 70, -64, 31, 59, 13, 62, 112, 5, -72, 2, 28, -42, -23, -43, 119, -13, -8, 5, -88, 119, 0, 72, 78, -45, -29, 4, 87, 10, 61, -2, 114, -85, -82, -77, 101, 2, 59, 2, 18, -117, -50, 25, -61, 29, 101, 64, -119, -121, -82, -113, -8, -11, -24, 83, 82, -6, 42, -113, 33, 43, 94, -105, -76, 99, -117, 108, 102, -123, -103, 123, 40, -9, -110, 42, 96, 14, -118, 112, 113, -86, -75, -19, 1, 64, 75, -51, -78, -14, -109, 42, 51, -60, -103, 30, 74, 40, 124, -118, 3, -48, 91, -42, 60, -113, 38, -4, 99, 45, -79, -32, 48, 59, -2, -83, -92, -24, 71, 63, 41, 6, -53, 78, 122, 76, 95, 58, 
  17, 27, 2, -46, 25, 114, 77, 99, -98, 80, 64, -57, -25, -102, -69, -48, -45, -101, 84, 55, -8, -66, -96, -68, 39, -68, 30, 58, -64, 7, 97, 111, -116, -21, -110, 106, -39, 67, 84, -59, -61, 22, 25, 5, -100, -112, 31, -5, -22, -66, 75, 120, -110, -58, 110, -19, -107, 119, -24, -90, 103, 10, -67, 74, -41, -61, 43, -80, 72, -29, -122, 62, -32, -66, 64, 14, -92, -107, 69, -109, 93, -70, -103, -120, -54, -16, -97, 95, -43, -112, 101, -6, -103, -84, -122, 102, 5, 103, -120, -116, -15, 97, -71, 84, -70, 103, -92, 23, -39, -54, -57, 11, 55, -29, 88, -96, -104, -118, -98, 10, 56, -7, 18, -72, 44, -108, -118, 90, 69, -59, 9, -84, -89, -10, -34, 79, 55, 88, -38, 34, 44, 40, -5, 33, -89, -12, -119, 26, 30, 49, 42, -60, -70, 95, -34, -6, -96, -7, 44, -72, -4, -110, 47, 39, -58, 3, 92, -90, 47, 116, 111, -109, 79, -45, -72, 14, -61, 45, -81, -56, -14, 86, -83, 66, -32, 68, 16, -107, 76, -122, 86, 84, -90, 101, -114, -36, -79, 5, 100, 100, -30, -59, -116, -30, 32, -44, -63, 33, -63, 94, -65, 111, 34, 25, -71, -81, 82, -92, 23, -52, 78, -54, 105, -40, -39, 104, 40, -19, -3, 80, 118, -19, -85, -28, 102, -62, 12, -32, -115, 73, 56, -90, 66, 116, 80, 54, -46, -118, -56, 94, -82, 47, -18, 90, 66, -117, -86, 18, 21, 49, 80, 60, 111, -43, 49, 43, 10, 114, 105, 116, 76, -54, -77, -80, -13, 37, 107, -9, -30, -11, 67, -111, 115, 3, 8, -120, -6, 112, 18, -115, 73, 12, 23, 17, -74, 53, -110, -75, -1, 86, 122, 100, -53, 73, 31, 68, 34, 68, 25, -100, -50, -94, 25, -85, 122, 39, -80, -41, 13, -116, 59, -30, 95, 115, -102, -10, -69, 13, -38, 120, 112, -40, -64, -28, 52, 50, -112, -119, -115, 111, 78, 60, -24, 49, 75, -59, -12, 68, 25, -62, 115, -21, 117, -74, -80, 113, -115, -26, 54, -44, 41, 64, 10, 88, -120, -105, -81, -18, 37, -35, 21, -115, 119, 33, -25, -58, -7, -23, 53, -56, -101, 113, -83, 102, -99, 36, -99, -95, -17, 59, -39, -17, -54, 37, 78, 43, 45, -37, 12, -54, -10, -79, 12, 36, 84, -91, 114, 65, 17, 66, 29, -98, -25, -51, -77, -54, 41, -73, -27, 52, -16, 76, 114, -116, 46, -22, -49, 114, 30, -51, 13, -107, -70, -111, -13, -6, -77, 88, -78, -36, 87, -15, 69, 32, -83, -80, -114, -105, -76, -21, -53, -5, -115, 101, 21, -51, 92, -26, 24, -80, 53, -94, 104, 56, -111, -62, -61, 84, 117, 112, -89, 92, -50, -68, -35, -30, -66, -36, 87, 15, 21, -100, -64, 88, -116, -24, -75, 110, 83, 43, -93, -3, 62, 1, 55, -121, -12, 7, 60, 92, 103, 92, -56, -37, 108, 18, 6, 49, 31, -83, -38, 114, 111, -75, 103, 48, -65, -106, -8, 71, 89, 81, -71, -62, -105, 28, 0, 71, 92, 115, 104, -117, 6, -43, 12, -108, 15, 17, -49, -49, 100, 11, 17, -88, -58, 121, -115, 8, -83, -67, 90, -22, 79, -21, 120, 82, -2, 52, -3, 95, -22, -78, 48, 35, 45, 94, 113, -118, 26, 34, -100, 116, 92, 21, 67, 104, -11, 108, 22, 49, 65, 118, -79, 51, 53, 11, 45, 62, -68, -101, -26, 106, 45, 65, -81, -62, -73, -9, 99, 75, 23, 46, 30, -99, -5, 13, -100, 76, 46, 67, 40, -118, 
  -5, -115, -99, 47, 4, 23, -119, -25, -80, 8, -37, -33, -93, -23, 60, -105, -79, -32, 97, -112, 78, -21, -57, 20, -58, 105, 9, -66, -16, -77, -83, 94, -110, 44, -78, 35, 24, -13, -63, -80, 102, -26, -8, -6, -33, 9, 88, -35, 118, -91, 108, -7, 26, -88, 73, 66, 70, 28, 41, 86, 39, -112, -110, 38, 59, -94, -61, 14, 59, 105, 92, 49, -49, 120, -45, 67, -80, -34, -94, -25, 25, -60, -83, 35, 95, 122, -15, 60, -81, 49, -42, 35, -120, -42, 123, 37, 77, -9, 54, -25, -84, 23, 72, -22, 64, 92, -72, 100, -21, -80, -10, 41, 29, -51, 105, 23, 80, -83, -81, -102, 117, 101, 66, 99, -96, -55, -37, -93, -96, -20, 63, -18, 1, 53, 57, -17, -42, -48, 13, 78, -18, -45, 17, -26, 100, -100, -118, -40, -57, 21, 80, -112, -82, -33, -80, -24, 24, -116, -120, 29, 10, 20, 91, -62, 51, 80, -99, -87, 24, 51, -46, -23, 95, 67, -104, 23, -122, -46, 0, -10, 7, 12, 118, -31, -113, 1, -73, 90, 76, -63, -1, -96, 32, -85, 69, -55, -52, 92, -117, -19, 99, -93, 123, 45, 55, -52, 111, -24, 64, 78, -30, -89, 35, 101, 99, -115, 9, 13, 4, 73, -26, -96, 97, 22, -24, -26, -108, 93, -12, 94, -119, -95, 3, 31, 7, -86, -9, 28, 59, 3, -9, 120, 56, -62, -78, -12, -6, -103, 81, -19, 37, 49, -125, -98, -36, -67, 75, -18, 27, -6, -11, 5, 20, -2, -36, -32, 60, 81, -105, 65, 99, -116, -93, -32, 76, -98, 91, 11, 103, -7, 23, 118, 42, 124, -78, 22, -38, -97, 21, -105, 78, 118, 81, 3, 104, 101, 78, 44, 86, 108, -54, -71, 20, 16, 2, -93, -81, 95, 43, -109, 80, -116, 60, 94, -45, -75, -58, 34, 92, 57, -113, 25, 7, 75, 5, -21, -41, -102, 104, -47, -7, 43, -45, -33, -115, -2, -55, 92, 74, -74, -46, 40, 0, 120, -32, 1, 91, -124, -92, -75, -96, 25, -4, 104, -100, 34, 105, -70, 15, 23, 60, -42, -55, 3, -117, -5, 105, 53, 4, -12, 73, 60, -123, -108, 43, 96, 76, 70, -89, -17, -56, 81, -38, -65, 115, -63, -52, 37, 87, -123, -17, 46, 102, 35, 63, 55, -82, 39, 113, 110, 60, 37, -82, 120, -17, -117, -41, -55, 13, -94, 103, 14, 34, -53, 0, 14, 10, -104, 105, -64, -48, 37, 13, -67, 19, 37, -84, 81, 21, -43, 30, 110, 44, 26, -19, -25, -27, -20, -65, 82, 72, 57, 75, 26, -68, 123, 51, 18, 115, -69, 56, -85, 26, 88, -84, -48, -40, 68, 77, -110, 95, -107, 47, -115, 3, -49, -8, 96, -75, -68, 51, -26, -81, 45, -18, -17, 86, -20, 71, 112, -6, 83, -118, 13, -83, -100, 58, -26, -54, -114, 8, -103, 47, 49, -46, -73, -23, -83, -31, 24, 73, -111, -67, 25, -19, -84, 58, -124, 107, -19, 36, 123, -57, -6, 10, 65, 3, -72, 24, 71, -94, 89, -73, 18, -25, 80, -61, -67, 51, -34, 107, -9, 96, -57, 73, -12, 104, 117, -61, 67, -57, 124, 96, -11, -18, -76, -67, -49, -78, 54, 7, 46, 103, -111, -52, -92, -23, -69, 12, -47, -77, 21, -30, -114, -40, 30, -122, -108, -14, 101, -62, -62, -111, 23, 90, 38, -52, -77, -34, -16, 51, -87, -125, 123, 106, -110, -74, -1, -71, 99, -70, -54, 71, 19, 5, 89, -83, 2, 53, -14, -33, -44, -123, 112, 106, -26, 49, -56, -78, -52, -57, 81, 
  -118, -33, -96, 50, 32, 35, -84, 19, 19, 104, 1, -105, 19, 54, 10, -60, -32, -26, 114, 71, -121, -76, 121, -10, -17, 111, 8, -40, 92, 22, 0, 89, 8, -99, -27, 91, 29, -24, -90, 6, 7, -22, -28, 66, -91, -76, 90, -90, 68, 74, 102, -70, -47, 109, -111, -70, 64, 2, 78, -83, -113, -65, -26, 77, -67, 36, -37, -119, -116, 44, 57, -43, -1, -73, 15, -87, -103, 48, -59, 69, 70, -68, -67, 15, 63, 66, 93, -62, 103, -37, -5, -80, -47, 76, 71, -101, -92, -50, 68, -10, -25, -74, -93, 51, 21, 33, -8, -80, 48, -97, 51, -74, -41, -12, 27, 80, -11, 25, 22, 6, 49, -116, 121, -66, -27, -85, -77, 103, -114, -62, -64, -51, 95, 39, -88, -43, 96, 18, -101, 76, 33, 106, 14, -43, -61, 94, 66, -15, 109, 21, 74, 48, 31, -39, 113, -28, -10, -91, -60, -112, -4, 75, -95, 65, 104, -25, 24, 7, 101, 58, -90, 103, -103, 122, 106, 59, -72, 58, 102, -19, 106, -8, -64, 93, -74, 74, 104, -40, 0, -52, 0, -97, 55, 42, -42, -122, 66, 55, -44, -66, -76, -67, 110, -22, 18, 44, 74, 122, -41, 51, -99, -6, 86, -100, -110, -116, -101, -25, 71, -55, -9, -73, -112, 15, -117, 4, -31, -38, 59, 76, 111, 46, -53, -39, 62, 18, 100, -117, -87, -60, -90, -35, -9, 21, 77, -80, 14, 48, -111, 109, -54, -9, -93, -1, 84, -20, -20, 70, -71, -96, 115, 107, 17, 8, -90, 100, -121, -92, -106, -76, 118, -2, -40, 99, 14, 17, 30, 96, 33, -22, 2, 67, 87, 36, 122, -100, 9, -73, -95, 72, -59, 69, 42, 113, 74, 122, 41, -107, -91, 104, 64, -50, -104, 31, -5, -21, -23, 122, 25, 36, 57, -103, 21, 99, 104, -30, -16, -12, -8, -90, -121, -85, -44, 33, -66, -59, 30, -53, -82, 29, -41, 92, -80, 19, -90, -2, -12, -53, -28, -87, -79, 97, -50, 32, 51, -60, 43, -43, 83, 117, -85, -33, -73, 98, 107, 97, 24, 18, -96, -38, 4, 88, -1, 43, -56, 22, 35, 69, -43, -118, 9, 81, 37, 20, 17, -109, 28, 62, -79, 97, -10, -66, -36, -99, 80, -29, -60, 61, 32, -35, -94, 113, -68, -116, 33, 113, 72, 28, -79, -121, -75, 43, 48, -26, 1, 62, -38, 100, 8, 46, -22, 33, 52, 76, 9, 83, -8, 122, -110, -71, -111, 75, 64, -71, -57, -68, -37, -78, 29, 8, -36, -44, 105, -78, -53, 55, -92, 29, 1, 80, 102, -2, 115, -68, -121, -1, -24, 110, 87, 83, -8, -100, 115, 44, -121, 99, -119, 122, -66, -26, 1, 73, 103, -19, -15, -44, 122, -38, -88, 27, 72, -42, 104, 82, 10, 60, -110, -39, -52, 69, -59, 107, -110, -67, 107, -115, 60, -57, 44, 92, -57, 118, 3, -101, -39, -39, 5, 1, 82, 80, 6, 95, 52, 46, -98, 56, -51, -47, 25, 82, -83, -35, -98, -14, -112, 23, 62, -94, -59, -56, -48, 38, 57, -31, -84, 96, 114, -99, 2, 17, -12, 118, -59, -77, -87, -91, 65, -100, 87, -49, -104, -65, -73, 114, 119, 104, 45, -100, -22, -1, 121, 29, 20, 34, 97, -68, 61, -2, 67, -76, 2, 9, 119, 40, -67, 62, -98, 42, 58, 98, -68, -104, 29, -74, 40, -18, 20, -94, -23, -50, -21, -73, -24, 60, -73, 4, 74, -81, -11, -116, 72, 118, -24, 43, -32, -17, -26, -28, 8, -103, 35, 58, -121, 16, 103, -30, -40, 107, -9, 53, 107, 81, 
  1, 68, -73, 76, 38, 108, -93, -47, 23, 37, 40, 4, -8, -25, -103, -5, -59, -54, 28, 22, 20, -49, -47, 27, -13, -55, 105, 49, 111, -1, 8, -64, -60, 67, -62, -46, 69, 62, -89, -62, 51, -99, -79, -32, -113, -6, 100, 91, 64, 39, 52, -110, 23, -66, 78, -26, 72, -93, 51, 34, -86, 26, -40, -70, 116, -8, 21, -78, -25, -117, -48, -8, -15, 25, 26, 45, 39, 30, -10, 112, -28, 60, 69, -73, 75, -4, -19, -55, -88, 104, -82, 49, 44, -47, 112, 0, -74, 48, 119, 13, -65, -20, -73, 117, -42, 25, -93, -39, -32, 67, 50, 82, -61, 109, -55, 23, 69, 114, -103, 93, -69, -10, -100, -20, 102, 103, 117, -106, -8, 41, -66, 33, 11, 48, 65, -86, -84, -122, 117, 32, 27, 104, 21, 113, -35, 29, -41, 87, 104, -72, -65, 19, 16, -26, 75, -66, -25, -121, -27, -12, -30, 93, -35, -99, -44, 30, 86, 69, 43, -95, 117, 115, 34, 50, 43, 120, 97, -107, 15, -106, 8, 71, 117, -31, -100, -106, 22, 113, 82, 49, -51, -1, -40, -14, -56, 70, 10, 69, -48, 77, -37, 77, 57, -10, -113, -87, 112, 19, 74, -11, 37, 101, -113, -11, 6, -63, 64, 21, -23, 95, 26, 54, 75, -108, -75, -61, -11, -58, 29, -73, -25, -113, 114, -58, 18, 37, -113, 109, 6, 3, 8, -24, -118, 90, -79, -5, -92, 5, -42, -17, 67, 30, 50, 6, 87, 15, -50, -63, 13, -97, -43, 97, 74, -96, 24, -56, -108, 40, 42, -111, -52, -11, -90, 90, -75, 60, -88, 19, 104, -95, -118, -9, 103, 86, -81, -85, 67, -36, -76, -41, -55, -66, 88, -81, -83, 78, 1, -18, -29, -17, -64, 88, 4, -20, 3, -46, -107, -23, -26, -6, -98, 10, -43, -49, -10, 101, -10, -22, 35, -2, -40, 80, 115, -94, 70, 78, 17, -10, -108, 54, -22, -103, 41, -117, 69, 57, 81, -16, 53, 40, 74, 46, -83, 59, -72, 43, -36, -118, 78, 56, 71, -121, 50, -106, -15, -30, 119, -18, 117, -36, 104, 30, -120, 65, 99, 52, -15, 4, 88, 39, 92, 70, 97, -77, 24, -84, 122, -16, -20, -49, -47, 105, -3, 27, -35, -33, 37, -113, -120, -27, 38, -111, -108, -71, 61, -113, -33, 9, -35, -96, -10, 44, 72, -39, -8, 54, 78, -42, -109, 25, 110, -6, 112, 67, 5, -65, 16, -19, -97, -67, 62, -106, 95, 3, 38, 48, 5, -33, -14, 112, 78, -33, 110, 91, 118, 63, 39, -109, -2, -91, -35, -6, 111, 56, 25, 47, -72, 52, 76, 67, -42, 4, 75, -52, 27, -91, -84, -19, 5, -41, -88, -98, -23, 78, 62, 14, 49, 45, -89, 83, -65, -12, -97, 65, 61, -25, 87, -1, -42, -51, 6, -100, -69, -35, 90, 62, -98, -25, -15, -5, -50, -58, -74, -48, 100, -12, -122, -63, -28, 113, -92, 3, -8, -105, 122, 73, 109, 43, 30, -40, 78, 5, -9, -111, 76, -94, -19, 110, -115, -27, 121, 110, 120, -6, -77, 54, 63, -74, 115, -115, 61, -44, 21, -68, -9, 67, -107, 91, -47, 1, 44, 89, -4, 112, -11, 65, -33, 65, -46, -28, -36, -50, -5, 30, -33, -16, -76, -30, -95, -27, 110, 7, 59, -38, 49, 42, -80, 33, 70, 12, -57, 115, 108, 3, -120, 15, 25, -69, -73, 122, -97, 58, 11, -21, 117, -115, -8, 35, 41, -94, -27, -41, -22, 17, -49, 28, 54, 86, 46, 59, 2, 85, 10, -40, 15, 55, -31, 62, 25, -10, -3, 29, 
  59, -66, -25, -22, 0, 43, 27, 43, -5, -103, -57, -77, 109, -55, 87, 20, -60, 41, 79, 105, -62, -115, -21, -41, -84, 58, 18, -51, 69, 37, 53, 117, 3, 107, -32, 73, -14, 35, 116, -68, -1, 29, 101, 68, -37, 74, -110, 71, -21, -9, -22, 2, -37, -55, -22, 77, 30, -49, 79, 10, -28, 2, 97, 3, 28, -5, 73, 51, 19, -91, -115, -53, -63, -109, -62, -113, 32, 118, 41, 56, -110, 26, 36, 1, 117, 116, -41, 31, -84, -36, 35, 35, -110, 23, -85, 3, 50, 114, -88, 46, 1, -12, 18, 73, 81, -70, -3, -88, -46, 8, 5, 91, 78, -22, 45, -68, 10, -55, 73, -112, -83, -24, 23, 81, 24, 59, 59, -65, -61, 107, -42, 59, -63, -65, 93, -112, -39, 29, -14, 31, -21, -6, -77, -76, 82, 111, -35, -80, -28, -62, -14, 88, -85, 85, -93, -98, 16, -93, -47, -103, 26, 49, 12, -114, -14, 103, 14, 40, -116, -95, 25, 92, 116, 69, 100, 104, 95, -32, -118, 109, 3, 74, -39, 88, 52, 92, -46, -16, 37, -15, -44, -97, -76, 100, 113, -12, 93, 109, 110, -118, -100, -114, 42, -76, 114, 2, -69, -87, -60, 32, -76, -33, -74, -95, 101, -102, -21, -69, 84, 115, 76, 55, 112, 87, -83, 72, -41, -14, -44, 90, 3, -35, 4, -15, -61, 17, 39, -102, 54, -79, 113, 92, 59, -76, 87, -20, -18, -42, 103, -27, -103, 108, 32, 72, -25, 75, 76, 5, -109, -47, -80, 110, -3, -98, -45, -71, -70, 98, 45, -77, -40, 6, -86, 32, 22, -97, -71, 24, -113, 45, 76, -79, -68, -64, -7, 27, -30, 2, 67, -10, -117, -15, -112, -57, 119, -91, 4, -62, 105, 120, -124, 95, -125, 61, 64, 0, 69, 93, -27, -89, 104, -92, -34, -86, -71, -113, 91, -18, -116, -91, 91, -101, -89, -9, 57, -22, 53, 60, -24, -88, -80, -26, 0, 44, 40, -89, -3, 38, -89, 23, 113, 21, 29, -13, 5, -28, 62, -2, -69, -73, 107, -52, 87, 60, 40, 37, -8, -70, 108, 8, -54, -56, -29, -78, 21, 84, -5, -95, 50, 15, 13, 111, -85, 122, -121, 70, -8, -75, -60, -105, 41, 112, -6, 114, -45, -115, 9, 111, 52, -18, -110, 66, -113, 17, 90, -102, -120, 4, -100, 62, -21, 21, 99, 107, 49, -4, -10, -93, -112, -115, 30, -38, -61, 27, -80, -65, 59, 69, 105, -5, 37, 57, 53, 79, -35, -15, 34, 68, -52, 36, 103, -91, 39, 51, -85, -75, 94, -23, 33, -46, -35, 0, 48, 10, -122, -67, 12, -54, 14, -99, 114, -20, 104, -26, -74, 11, 105, -97, 35, -124, -96, -82, 117, 30, -79, -18, -77, -92, -5, 99, 92, -32, -15, 11, 85, 114, -38, 92, 19, 98, -33, 6, 5, -42, -41, -95, 64, 24, 100, 41, 80, -55, 78, 52, -32, -32, 101, -103, -3, 39, -97, 10, -100, 40, -25, -51, 43, 38, 13, 119, 93, 97, -77, -109, -8, 58, -97, 123, -13, 64, -28, -40, -112, -23, -49, 66, 23, -97, 93, 13, 89, -72, -116, 20, -12, 72, -124, 104, 13, 55, 99, 71, 108, 111, 49, -96, 22, 28, 34, 98, -49, 65, -51, 50, -86, 120, 55, 25, 81, 39, -105, 47, 24, -103, 56, 63, -109, 44, -117, -50, -56, 26, -6, 84, 82, -71, -32, -99, 91, -115, 98, 1, 73, 8, -83, -33, -40, -8, 6, 31, -58, -94, -41, 39, -18, 22, -101, 33, 74, -74, -34, -84, -63, 54, 52, -25, 32, -34, -37, 10, 18, -103, 
  -93, 112, -18, -47, -44, 33, 33, -25, -59, 62, -98, -94, -123, -83, 102, 26, -23, 55, 30, -40, 20, -18, 114, -94, 28, 5, -62, 17, 33, -36, 51, -33, -79, -13, -41, -54, 25, 86, 8, -50, 98, 1, -108, -62, -21, -7, 91, 101, 62, 57, 41, 12, 85, -46, -117, 61, -71, 51, 11, 16, 44, -31, 15, -42, -48, -106, 37, -31, -58, -19, -106, 61, -24, 55, -50, -70, 32, 32, 93, 29, 54, 15, -39, 0, 57, -61, -54, 91, 110, 6, -48, -15, 1, 91, -106, 17, 74, -82, 110, 99, 42, -16, 69, 36, -16, -96, 58, -111, -95, -18, 107, 51, 68, 61, -73, 74, -103, -119, 29, -33, 76, -22, 5, -9, -79, 21, 109, -37, -34, -50, -49, -80, -30, -20, 72, 84, -72, -112, 29, 15, 67, -72, -94, -107, 99, 80, -29, 34, 117, 28, -23, -1, -4, -31, 37, 38, -34, 50, -109, 116, -112, 82, -42, 1, 116, -62, -115, -83, -99, 60, -83, -2, -80, -9, 113, 52, -115, 2, -78, 107, 97, -93, 113, -17, -90, 94, -19, -90, -54, -10, -67, 72, -98, -85, 67, 99, -18, 76, 72, -21, -36, 100, 78, -40, -85, 106, -82, -40, -71, 118, -90, 81, -80, 78, 23, 56, -100, 73, -22, -74, -103, 90, 21, -66, 120, -84, -109, -28, 68, -91, -65, 42, -49, 60, -60, -1, -45, 11, -70, 39, -113, 58, -65, -31, 3, 69, 24, -97, 13, -62, -20, -51, 53, -96, 80, 27, 62, 54, -84, -109, 60, 56, -68, -14, 40, 112, -22, 13, 87, 24, -55, 93, 94, -18, -58, -75, 45, -16, 111, 38, 90, 68, -89, 6, -56, 23, 104, 18, 31, 97, 45, -93, 108, 119, -10, -2, 45, 25, -10, 61, -58, 120, -18, 16, 32, 94, -23, 8, 87, 79, -34, 43, -52, 43, 23, 37, 84, 33, 22, -68, -97, -6, -32, -37, -114, 117, -118, 82, 13, -2, -59, 100, -57, -62, -119, 74, -73, 57, 118, 113, -7, -80, 84, -2, -21, -31, -68, -86, 69, 89, -24, -64, -112, -39, -70, -64, -25, -70, 115, 70, -19, 65, 99, -8, -53, 17, -108, -47, 41, 117, -73, 12, 79, -31, -80, 43, 32, -31, 15, -25, -106, -96, -101, 45, -34, 115, 2, 13, 0, 33, 118, -105, 110, 69, 97, -104, 108, -119, -34, -98, -5, -35, -22, 91, -100, 35, -43, -104, -73, -31, -61, 15, -7, -88, 94, -81, 11, 54, -11, 58, 95, -56, 16, -78, -103, -121, -18, 91, -51, -3, -67, 14, -47, 10, -89, 108, -87, 62, 89, -85, 5, 1, 70, -98, -110, 67, 95, -109, -58, -94, 58, -10, 88, 71, 55, -15, 8, -70, -91, -18, 123, 96, -20, 119, 18, -122, -17, 94, 112, 115, -102, -84, 20, 78, -66, 124, -87, -50, 93, -48, 74, 107, 80, -10, -5, 85, -12, -64, 8, -16, 91, -61, 48, -44, -3, 5, -71, -43, 79, -107, 28, -23, 1, -79, -41, 76, -9, 65, -38, -112, -106, 7, -52, 112, -109, -48, -77, -3, -86, 86, 84, -78, 87, 74, 71, -62, 120, -105, -111, -38, 8, 28, -89, 33, 28, -38, -100, 57, -8, 31, 117, -21, -102, 79, 113, -57, 86, -107, -4, 66, 41, 45, -62, -83, 43, -45, 90, 62, 34, 108, -96, -4, 19, 108, -33, 122, -60, 11, -21, -53, -62, -1, 10, -125, -28, -75, -14, 87, -29, -14, 50, 71, 30, 103, -7, 54, 64, -24, 83, -31, 110, 51, 2, 71, 97, -85, 92, -36, 3, -107, -111, 92, -70, -25, -16, 54, -25, 119, -119, -39, 104, 36, 
  -40, 118, -82, -28, -100, 112, 18, -113, 97, -94, 76, -65, -87, -53, -67, -13, -2, -96, 7, -34, -38, -96, -116, -24, -19, -105, 84, 37, 44, 84, -107, 101, -107, -63, 13, 38, -119, 27, 52, 41, 14, -109, 76, -80, -80, 92, 53, 95, 26, 3, 110, 38, -55, 110, 48, 13, 0, 106, -39, -70, -18, 61, 36, 90, -108, 38, 49, -83, 77, -71, -115, 102, -40, 116, 43, 58, 18, 7, 97, 94, 86, 105, -13, -9, -71, 39, 83, -98, -93, 110, -109, -101, -118, -110, -88, -74, -121, -91, -79, 67, -111, -2, -109, 36, -6, 29, -13, 82, 67, -22, 103, 16, 81, -51, -14, 65, 3, 97, -61, 34, 24, 109, -113, -68, -93, 107, -53, -49, -48, 85, -13, -110, -106, 2, 117, -73, 80, -26, 94, 45, -82, -2, -76, -41, 34, 36, -48, -106, 47, 80, -119, -39, 13, 53, -47, 4, 23, -25, -87, 30, 45, 85, -3, -58, -104, -119, 50, 73, -27, -71, 40, -60, 59, -77, 75, -36, 107, 12, -75, 6, -74, 2, 42, 13, 18, -72, -38, -9, 63, -119, -15, 3, 42, 42, 109, 114, 46, -55, 96, -70, -21, 111, 101, -41, -81, -112, 95, 13, -15, 40, 30, -113, -102, 46, -108, -11, 120, -13, 118, 17, 122, 74, 99, -36, 82, 54, -114, -121, 85, -35, -2, 14, 103, 59, -111, 36, -116, -32, -80, -96, -121, 97, 70, -17, 54, -101, 55, -45, 94, -19, 70, -8, 25, -81, -114, 4, 19, 68, 35, 79, 50, 109, 66, -107, 96, -70, 1, -94, -107, -26, -94, -50, 115, 115, 36, 98, 46, 29, 23, 88, 102, 21, 30, 95, 40, 88, -119, 33, -49, 72, 49, -82, 7, 42, -25, 30, 57, -78, 70, 30, 96, 99, 60, 21, -76, -35, -86, 75, 104, 83, -43, 86, -6, -50, -55, 47, -114, 37, -7, 120, -29, -6, -62, -38, 76, 39, -21, 85, -63, -44, 79, 106, -113, -27, -118, 28, 7, -51, -27, 122, -80, -112, -13, 56, 23, -107, 95, -105, -11, -25, -71, 111, 20, 32, -49, -80, -69, -9, 16, 69, -107, -111, -8, 24, -13, -41, -48, -22, -22, 86, 0, -30, 79, -77, 95, 18, 7, -66, 90, 27, -46, 43, -9, -88, -85, -86, -87, -30, -24, 57, 50, -47, 120, -52, 119, 54, 53, 112, -73, 106, 98, -61, 3, 42, 86, 84, 59, 56, -99, -10, -16, -116, -9, 100, -1, 50, 119, -64, -31, -70, 43, 73, 97, -106, 28, 116, 13, 116, 112, 76, 56, -86, -44, -117, 61, 87, 13, 112, 28, -70, -111, 115, 50, 13, -30, 32, -45, 82, -32, 60, -15, -51, -61, -119, 5, 61, 15, 91, -114, -16, 2, -97, -92, -95, -106, -105, 120, -94, -91, 63, -81, -65, 91, -78, 118, 0, -4, 93, -117, 121, -69, 34, -82, 16, 35, 61, 53, 104, -118, -88, 118, -46, 1, -121, 47, -95, 98, 45, 47, 118, 44, 8, -77, 3, -70, -23, 87, -101, -115, 63, -91, -74, -13, 84, 36, -86, 63, 21, -110, -44, -104, -122, 10, 71, 89, 19, 72, 113, -3, -69, -18, -23, 122, -20, -69, -65, -94, 11, 86, 72, -116, 91, -29, 75, -36, -104, -39, 14, 23, -24, 26, -52, -37, 119, 77, 55, 49, -83, -118, -11, 10, 16, -42, 7, 65, -102, -37, 46, -14, 18, 3, 60, 102, -35, 29, -28, -3, 78, -97, -52, 50, 70, -50, 42, -4, 34, 9, -73, -105, -42, 32, -16, -103, 4, -103, -7, -110, -111, 77, -14, -92, -6, -17, -78, -53, -108, 112, 106, -52, -121, -7, 69, 
  34, 52, 42, -119, 78, 53, -42, -21, 48, -98, -117, 112, 6, -44, -125, -78, 24, -24, 84, 2, -18, -37, -20, -67, -54, 110, -107, 25, 99, -5, -45, 48, -56, 46, 87, 35, -22, 16, -106, 27, 63, -102, -88, 83, -37, 4, 98, 56, -87, 105, -124, -93, 28, -87, -38, 2, -105, 40, 74, 32, -23, 92, -67, 117, 106, 103, -123, 20, 2, -125, 49, -84, 51, 122, -88, 108, 54, 62, 98, -15, -59, -33, 86, -44, 58, -9, 51, 41, 51, -26, 93, -18, -117, -33, 10, 45, -28, -107, 108, -92, 99, 74, 48, -112, -82, 50, 25, -100, -3, 52, -11, -33, -89, -47, 101, -75, 65, -121, 73, 56, -45, 15, 88, -98, 83, -88, -75, -50, 73, 112, -47, -111, -40, 48, 35, -82, 80, 10, 46, -59, 41, -73, -8, -71, 53, 44, 66, 98, -49, -63, 93, 122, 11, -15, -52, 90, -87, 62, -17, -78, -25, -42, 17, -34, -3, 72, -38, 27, -80, -23, -71, -41, -89, 52, -17, -78, -94, 101, 31, 87, 89, 67, 52, 93, 92, 13, -25, -88, 101, 48, -53, -73, -26, -50, 48, -57, -20, -90, 111, 123, 73, 14, 39, 39, -21, -24, -13, -6, -97, 110, -119, 46, 43, 93, 8, 59, 20, -22, 111, -38, -23, 105, -7, -57, -74, -45, -60, -120, -70, 96, 98, -49, 22, 120, 86, 23, 23, -81, -70, 55, 114, -60, 38, -97, 65, -59, 46, -26, 91, -98, -36, -76, -105, 35, 57, -90, 36, 1, 37, -2, -17, -48, -101, -108, 74, 116, -66, 10, 88, -1, 26, 25, -28, -104, 4, 84, -91, 107, -74, 73, -50, -44, 23, 3, 119, 2, 22, -14, -37, -36, 92, 109, 2, -5, 64, 31, 62, 32, -1, 103, -106, -107, 56, 99, 95, -68, 102, -84, 111, -102, -5, -66, -96, -63, 38, -50, -3, -57, 67, 111, -18, -102, -87, 43, -92, -94, 79, -93, -56, -28, 118, -46, 114, -69, -36, -8, -112, 123, -80, 36, 27, 89, 16, -30, -68, 107, 3, 15, -112, 80, 69, -18, -96, -77, 70, 95, 28, 22, -45, 89, -100, 108, -90, -30, -49, 21, -26, -119, -112, -24, -8, -92, -57, 8, -8, -119, 66, 61, 66, 14, 103, -14, 30, -23, 25, -88, 62, -25, -80, 2, 9, -52, 107, 59, -69, -42, -55, 78, 45, 55, 46, -18, 91, -17, 41, -110, -57, 107, 36, -62, 37, -92, 49, 12, 111, 113, -4, -84, -10, -98, -58, 24, 8, 106, 67, -50, -59, -30, -36, -15, -35, -17, 69, 114, 57, -51, -32, 98, -36, -45, 35, 43, 47, 60, -42, 14, 65, -17, 97, 111, -1, 121, 86, -21, -74, -91, 2, -89, -88, -37, 30, 68, -45, -4, -59, -47, -37, -114, 15, 104, -17, -9, 121, 2, 71, 22, 92, -95, -111, 45, -67, -1, 111, -73, 76, 99, -106, 9, -88, 119, 70, 6, 101, 51, -7, -101, 47, 93, -106, -67, -65, -6, 120, -124, -8, 77, 53, -34, 119, -111, -96, 124, 49, -54, -83, -74, -115, 56, 67, -71, 49, 50, -73, 85, -83, 111, 5, -100, -4, 98, -22, -70, 41, -29, 33, -116, -64, -105, 66, -67, 59, -53, 40, 19, -43, -12, -61, -100, 100, -52, -86, 74, 95, -91, -96, -8, -74, 119, 48, 101, -66, -104, 81, 92, -77, -119, -76, -120, -74, -115, 101, -49, -78, 65, 4, 8, 65, 11, 108, 9, -19, 21, -56, -36, -67, 94, 119, -83, 27, -56, -74, 77, 93, 19, -45, -118, -47, -16, 64, -100, 45, 1, -39, -67, -92, 39, 84, 30, -5, 52, 45, -15, 
  -6, 23, 11, 59, -105, -6, -10, -46, 61, -22, 4, -39, -58, -5, 10, -51, 32, 107, 99, -98, 76, -77, -9, 102, 93, -90, -41, -76, 105, 69, -94, 37, -4, -89, -18, 103, -13, 89, -6, 88, -86, -52, 63, 70, 35, -94, 80, -13, -39, 86, -31, 120, -72, 118, 86, -115, -94, -48, 66, 35, -69, -43, 114, -79, 109, 101, 112, -68, 88, 52, 13, -51, -63, 23, 50, 1, 79, 80, 51, -77, -1, -95, -48, 35, -118, 59, -32, -43, 35, 11, -102, 32, 69, -87, -65, -21, 10, -85, -59, -82, 21, 17, 23, -68, -16, -35, -104, -70, -93, 117, -86, 6, 34, -102, -75, 21, 101, -22, -78, 120, 42, -29, -63, -103, 43, -5, 37, -20, 3, -101, 85, 81, 106, -120, -91, 121, -64, 75, 96, 35, 40, 121, -101, 65, -47, 37, -38, 20, 4, -33, 60, -70, 6, 40, -97, -37, -94, 120, 19, 112, 75, 14, -9, 37, -98, -112, 95, 6, -30, -92, -107, 113, 9, -83, 5, 120, 90, -60, 5, 21, -108, -92, -72, 116, 14, -58, 80, -1, -66, 61, -66, -63, -68, 47, 57, -67, -36, -38, -28, -7, -115, 9, -100, -81, 41, 60, -119, -18, 98, 77, -92, -14, -95, 75, 40, 36, -72, -86, -54, -67, -8, -119, 112, 110, 99, 54, 27, -43, -114, 9, 12, 45, -81, -46, 67, 72, -26, 82, -42, 17, -6, 63, -15, 89, -81, -20, -107, -121, -15, 12, -101, -70, 11, -19, -33, -57, -37, 106, 73, 74, -114, -5, -93, -71, 4, -69, -46, 65, 96, 41, -107, 121, 35, 18, -9, -86, -59, -82, 109, 1, 77, -76, 99, -17, -72, 35, 50, -33, 1, 6, 60, -77, 57, -10, 88, 55, 18, 13, -68, 24, -100, 29, 118, -54, 52, -24, -3, 112, -54, -94, 56, 29, -87, 31, -70, 8, 119, 18, -99, 76, -48, -118, -1, -3, -84, -60, -22, -39, 10, 71, -16, 85, 65, 119, -56, -8, 112, -65, 49, -75, -14, 24, -25, -98, 20, -73, 37, -102, -119, 59, 37, 38, -31, -30, 107, -121, 29, 95, -1, -36, -73, 59, 23, 93, -119, -106, 16, -109, -103, 22, 63, 88, 5, -72, 51, -122, 65, -70, 89, -109, -51, -83, -84, 73, 77, 79, -90, -58, 64, 30, 51, -46, -2, 119, 27, -86, -25, 11, 18, 59, 58, 16, -97, -16, -25, -112, 19, 120, -17, 73, -34, -74, 3, -46, -16, -12, -58, 106, -120, 31, -86, -9, 101, 93, 95, -86, 67, 46, -54, 50, 103, -111, -12, -40, -69, -32, 83, 65, 36, -98, 24, 9, 111, -30, -104, 13, 85, 120, 80, 23, 18, -49, 77, -1, -18, -19, 41, -61, -9, -6, -30, -65, -95, 106, 92, -85, -74, -47, -73, 75, 98, 49, 26, -23, -9, -9, 33, 7, -22, -111, 27, -92, 18, 4, -122, 34, -72, -8, -68, -82, 33, 119, -13, -48, 70, 104, 13, -77, -92, -42, 107, 101, -58, 65, -14, 112, -50, 86, -1, 114, 111, -22, -101, -23, 112, -78, 61, 8, 10, 100, 9, 106, 114, -47, -73, 68, 107, -8, -34, 103, -23, 51, -106, 55, 122, 41, -73, 49, -17, -88, -16, -3, -97, 16, -87, -89, 44, 68, 121, 95, 29, -104, -52, 74, -95, -93, 10, 88, -35, 113, 67, -75, 95, 114, 98, -72, -39, -105, -108, -28, 102, -103, 82, -120, 55, -120, -19, 22, 6, -89, 5, 77, -117, -90, 76, -58, 82, 43, -46, 80, -54, 94, -44, -35, 24, -100, 25, 61, -57, -46, 49, -91, 103, 64, 88, 99, -21, 81, 60, 118, 48, -11, 
  -100, -98, -118, -94, 117, -44, 36, -1, 14, 79, 12, 100, 20, 105, -17, -92, -73, 71, -40, -10, -69, 4, 79, -112, -56, 41, -91, 65, 45, -103, 113, -18, -115, -5, 109, 42, -46, 17, -81, -15, -46, 3, 94, 108, 37, 75, 26, 70, -53, -110, 107, -61, -94, -1, 70, -74, 14, 97, -114, 109, -71, 26, 68, -109, -86, -63, 96, -29, -121, -65, -47, -22, -71, -59, 34, -60, -94, -107, 60, 81, 82, 106, -63, -102, -88, 68, 62, -71, 56, 77, 78, -20, 34, -10, 27, -71, 97, -8, 95, 94, -72, -39, -1, 74, -120, 35, 124, 114, 107, 65, -10, 48, -80, 38, -102, -46, -90, 70, 84, -119, 48, -16, 99, 34, 51, 58, -50, -41, -48, -120, -51, -65, -45, -88, 54, 79, -14, 15, 42, -46, 55, -64, -32, -100, -27, 15, -28, 95, -91, 62, 50, -51, -86, -57, -44, 56, -86, -77, -102, 69, 64, -64, -8, 60, 80, 56, -55, -63, 24, -23, 67, -106, -60, 21, 58, 73, 54, -1, 62, -50, 36, -20, -72, -49, -50, -45, 50, -96, 72, -93, 117, 68, -114, 71, 101, 32, 28, 69, -8, 113, 9, 42, 106, -28, -33, -56, 91, 32, 69, 76, 86, -35, 24, -86, -102, -21, -14, 97, -58, 38, 6, -28, -22, 27, -56, 25, 106, -22, -50, -79, 43, 30, 1, -27, -66, -49, 83, 68, -84, 99, -11, -34, -56, 53, 103, 26, 11, 108, 52, -43, -46, -15, -81, 98, -115, -40, 90, -50, 13, 76, -22, -7, 58, -17, 32, 14, 61, 30, -25, 34, -62, -44, -81, 112, -24, 96, 94, 26, 3, 64, -5, 55, 24, 98, 68, 29, -73, 74, 34, -112, 90, -22, 18, -36, 64, 57, -82, 59, 68, -5, 25, -64, -72, -60, -106, -25, 54, -10, 13, 103, 19, 25, -113, 84, -109, -72, 84, -29, -16, 32, -109, 3, -89, -16, 42, -37, -84, 16, 60, -98, -90, -56, -121, -11, -100, -112, 113, 11, -104, -101, -10, 14, -26, -42, 111, 41, -67, -86, -13, 123, -24, 114, 110, 58, -88, -24, -7, 117, 56, 115, 99, -25, 112, -55, -16, 34, 67, 87, -54, 79, 87, -99, 78, 109, 5, 88, -25, 74, -114, -60, -61, 115, 122, -45, -48, 25, -66, 115, 82, -119, -40, 54, -93, -2, 26, -77, -53, -115, -112, -109, 60, -96, 54, 107, -49, 112, -110, 47, 69, 40, -52, -17, -58, -65, -20, -3, -12, -16, 106, -28, -25, -28, 17, -21, -5, 97, -91, -94, -5, -21, -80, 104, 119, 113, -47, -116, 66, -122, 36, 102, -64, -1, 116, 25, -95, -71, -74, -112, 81, 17, -95, -62, 50, 31, -105, 66, 24, 72, -101, -24, -3, -100, 100, 13, 23, 89, 66, -17, 20, -1, -41, 35, 66, -95, -79, 37, 33, -76, 72, -21, 20, -109, 23, -12, -80, -23, 41, 72, -39, -53, -28, -82, -41, 45, -82, 74, 6, -121, 11, -55, -106, 114, 20, 64, 116, 46, -22, 20, 6, -119, 61, 51, 113, 17, 124, -71, 103, -31, 17, -112, 107, -54, 14, 116, -34, -114, -99, -8, -95, -105, 65, 11, 7, -108, -94, 78, -105, -83, 92, 21, 114, 4, -110, -17, 49, 15, -44, -92, 79, 51, -93, 11, 17, 104, 70, -66, 42, 55, -76, -39, 56, -81, -13, -117, 56, 6, 15, -23, 107, -38, -96, -40, 112, 86, -34, 71, -97, 68, -24, 107, 4, -102, 63, 48, -71, -114, -41, 59, -118, 4, 49, -115, 22, -120, -89, 51, 22, -85, 91, -121, -53, 3, 89, 19, -72, -97, -69, 19, 20, 29, -80, -53, 
  98, 69, -8, -24, 16, 116, 28, 87, 90, 111, -23, 97, 12, -79, -76, 50, 20, 67, 90, 91, 58, -50, -2, 25, 82, -82, -28, 94, -73, 71, -109, 51, -83, -47, 90, -97, 95, 62, 95, -54, -47, -39, -123, -106, -106, -16, -117, -3, -8, 22, -32, -15, 101, 118, 113, -58, 93, 44, -111, 50, -33, -14, 73, 11, 14, 73, 85, -68, 40, 55, -80, -62, 0, 120, -44, 28, -76, 42, -70, -21, -96, -44, 53, 98, 26, -34, 84, 115, -49, -98, -9, 95, 33, -83, -103, -99, -10, 67, -29, -96, -108, -38, 81, -89, 46, 67, -70, 18, 75, -20, 3, -13, -98, -75, 46, -6, -59, 119, -88, -78, 72, 104, 67, 87, 107, 29, -1, -117, -81, 86, 125, 90, 66, 37, 32, 100, -20, 89, 61, -43, 87, -122, 96, 10, -34, 101, -27, 43, 32, -100, 42, -118, -96, 83, 19, -6, 35, 67, 24, 78, -92, -51, 95, 119, 102, -24, -65, -98, 80, -62, -25, 35, 22, -65, 67, -97, -122, 32, -77, 76, 24, -88, -101, -109, 73, -94, 9, -89, -39, -20, 17, 97, 102, 93, -114, -65, 6, 35, 96, -36, -66, -117, -41, 55, -45, 31, 50, -47, 111, 35, -121, 42, -115, -2, 56, -43, -45, -116, 16, -12, 65, -124, -88, 33, 83, -24, -114, 48, -61, -64, 83, -120, 49, 109, 27, 8, -67, 80, 98, 1, 43, -47, -111, 62, -38, 15, 82, 93, -48, 90, -40, -1, 117, -36, -121, 66, -100, -8, 53, -61, -103, -39, -60, -15, 74, 7, 95, -68, 104, -43, 35, -112, 64, 106, 51, 106, 79, 103, -28, 7, -103, -40, -75, 16, -39, 102, 0, -61, 95, 3, 32, 35, -28, 13, 22, 0, 87, -114, -104, -76, 34, -65, -16, 29, -62, 46, -112, -64, 7, -10, 49, -111, 70, 27, -81, 24, 1, -71, 6, -73, -89, -66, -84, 46, -98, -111, 93, -28, -34, -39, -82, -66, 107, 39, 88, 109, -19, -48, -105, 76, 83, 81, -44, 9, 84, 15, 124, -103, 47, -72, 86, -11, 83, 110, -70, -116, 108, 74, 115, 29, -51, -27, -50, -119, 73, -20, 30, -72, 84, -62, 85, -53, -15, -98, 68, 50, 5, 34, -90, -104, -123, -15, -111, 7, 113, -116, 101, -23, 95, 117, -17, 37, 53, 25, 81, -21, -121, 63, -22, 62, 112, 20, -90, 105, -39, 33, 49, 103, -43, -44, 35, 88, 75, 80, -123, -5, -90, -17, 21, 85, -66, -19, 40, 77, 123, -29, -52, 118, -102, -21, -111, -71, -16, 42, 76, -114, 14, -61, -59, -118, 119, -27, -28, -71, -117, 111, -95, -6, 63, 110, 27, 123, 67, -120, -77, -99, -122, 7, 20, -8, -110, -83, -79, -88, -88, -98, 53, -70, 101, 74, -12, -118, -35, 109, 11, -111, -79, -53, -31, -42, 2, 102, -65, -90, 92, -37, -22, -77, -2, -64, 73, -27, 33, -102, 19, -114, 124, -89, 37, 103, -111, -94, -39, 58, 80, -25, -29, -90, -8, -42, -44, 46, 109, -113, 66, -15, 86, -117, -76, -70, 69, 56, -63, 24, 70, -16, -100, 47, -106, -119, 86, -124, -96, 66, 31, 123, 95, 16, 112, 22, -14, -95, 10, -52, -4, -107, -47, 48, -46, 21, -11, -33, 52, 45, 61, 5, 89, -52, 90, 92, 61, -122, 9, 96, 27, 99, -10, -39, -51, -95, -85, 23, -1, -106, 89, 53, -34, 79, -63, -85, 70, -93, -77, 39, 7, -85, -12, -119, 98, 78, 22, 52, 20, -110, 71, 19, -51, -58, -94, 10, -43, -84, 10, -102, -67, -110, -119, 108, -79, 93, -57, -62, 
  43, 85, 18, -72, 96, -42, 30, -50, -20, 109, -6, -62, -90, 103, 104, -119, 64, -10, -118, -23, -116, -27, 111, -23, -104, -11, -92, 34, 98, -54, 78, -38, -42, 99, -101, -70, -66, -11, -93, 109, -25, 23, 18, 95, -14, -54, 74, -54, -22, 53, -39, -45, -36, -96, 93, 84, 82, -1, 74, 47, -94, -67, 39, -18, -28, 72, 104, 105, 101, -101, -113, -100, 29, -9, -103, 81, 5, 34, -66, 51, 7, -14, 108, -18, -74, 78, -80, -29, -15, -39, 93, 62, -95, 23, 13, 100, -122, 70, -102, -99, 86, 115, -30, -71, -42, 88, 35, -20, 53, -9, -75, 67, 23, -62, -15, 109, 27, 40, 90, -121, -48, -4, -23, -81, -31, 81, 60, -91, -77, -15, -15, -98, -41, 30, 100, -90, 81, 78, 60, -23, 26, -122, 125, 67, 52, -7, -108, 107, 106, 103, 101, -50, -9, 47, 61, -34, 91, 113, -38, 83, 63, 66, 94, 38, -78, -5, 115, 67, 34, 67, -58, -69, 90, -89, 1, 51, -122, 94, 91, -94, -23, -118, 17, 3, -31, 40, 68, 54, 95, -62, -82, -10, 104, 53, 91, 42, -10, 108, -67, -14, 79, 118, 72, -8, -88, -118, 51, -95, -95, 90, 42, 104, 82, -65, 101, -23, 58, -119, 92, 14, -33, 19, -113, -93, 101, 46, -111, 60, -68, 30, -36, 107, 92, -85, -84, 8, -116, -5, 8, 17, -114, 113, -104, -70, -5, -55, 82, -20, 20, 29, 16, -119, 6, 21, -60, 95, -77, 97, -95, 38, 92, -98, 32, 98, 56, 91, -15, 34, -103, -55, 75, -62, 75, -44, 26, -73, 79, 19, -65, 66, 35, -32, 68, 100, -12, 77, -52, -100, 48, -11, 51, 23, -99, -7, 114, -90, 41, -110, -51, -124, -37, -88, -90, -24, -34, 100, -28, 122, -11, -110, 44, -43, 117, -91, -99, -30, 64, 13, -114, -14, -106, -106, 36, -117, -103, -1, 112, -57, 32, -78, -10, 4, -25, -16, 120, 17, -109, 60, -66, -81, 109, -111, 62, 96, 73, 31, -20, -18, -57, 18, 101, -64, -111, 26, -37, -117, -114, 37, -117, -22, -103, -49, 64, -96, -75, -53, -63, -27, -12, -95, 85, -60, -98, -29, 51, -4, 42, -10, -53, 81, 45, -104, 19, 74, 18, -46, 100, 35, 89, 42, -24, -29, 25, -122, 105, 81, 33, -2, 4, 20, -13, 85, 8, -89, 86, -45, -106, -60, 16, 35, 101, -64, -26, -44, -45, -49, 68, 4, -50, 32, -100, 40, 55, 67, -29, -105, -104, 102, 93, 106, -53, 41, 81, 104, 44, 57, 62, 43, 118, -37, 94, 79, 100, 80, 72, -34, -85, -117, 67, 88, -11, -32, -40, 30, 109, 76, 77, -46, 23, 3, 43, 65, 99, -48, 71, 84, -42, -23, -57, -90, 114, 36, -58, -54, -18, 19, -34, 7, 115, 3, 9, 70, -27, 9, -74, 53, 107, 72, 18, 29, 82, 74, 27, 18, 101, -26, -30, 91, -80, -91, 114, 65, 34, 116, -47, 98, 10, -82, -11, -56, -68, -66, 72, 15, -117, -86, -77, -71, 61, 47, 29, -97, 43, 23, -125, 49, -108, -25, 51, 48, 117, -17, -87, 26, -92, 125, -81, -14, 75, -94, -107, -50, 39, -34, 104, 79, -2, 31, -46, 40, 19, 58, -41, -107, 85, 36, -67, -12, -15, -65, -78, -95, -33, 60, 29, -114, 18, -64, 64, -87, -16, 89, -76, -121, 3, 85, -95, -17, -3, 5, -4, -116, -50, -68, 20, -49, 87, -119, 75, 59, 36, 23, -58, -11, -81, 36, -65, 111, -76, 11, -62, 44, -16, -116, -32, 47, -30, -115, -48, -71, -53, 107, 
  15, 28, -34, 83, 14, -29, 62, -25, 38, 93, 116, 106, 60, -51, 6, 28, -72, -62, 35, 97, -117, -42, 49, -47, -117, 95, 68, 23, 104, -53, -117, 121, 36, 60, 83, 60, 110, -72, 69, -109, -39, -7, 83, -36, -69, 12, -68, -8, 0, 112, -77, -72, -14, -26, 80, 70, 24, 115, -111, -51, -1, 3, 118, -16, -1, 79, 44, 77, -121, 108, 94, -96, 3, 42, 111, -88, 44, 30, -38, 120, 32, -61, 65, -18, 75, 62, 78, -66, -85, 118, -24, 73, -78, -20, 56, -11, 75, 73, 87, 81, -93, -4, -36, -122, 2, -68, 60, -13, -111, 115, 106, -96, 78, 12, 41, -75, -62, -118, -87, -71, -83, 16, -68, 11, -102, 37, -30, 5, 60, -48, -67, -2, 104, 74, -35, -59, -57, 10, -4, -76, 111, -97, -36, -85, 40, 2, -98, 68, 111, -25, 26, -38, -97, -107, -51, 9, 56, 73, 57, -17, 38, -56, -93, 62, -106, 68, -91, -90, 14, 40, 77, 16, 26, -116, 122, 80, 122, -46, 25, -76, 67, -26, 74, -59, 8, 68, 121, 99, 57, 22, -115, -55, 101, -107, -22, -89, -21, -114, 92, -122, 0, -11, 113, -57, 111, 110, -86, 115, 116, -119, 53, -38, 68, -35, -38, 65, -23, -81, -116, 45, 24, -122, 50, -63, 50, -28, 104, 7, -87, -36, -87, 3, 2, 44, 111, 77, 117, -113, 35, -61, 0, -104, 104, 83, 121, -5, 12, -123, 120, -62, 61, 34, 9, -11, -7, 107, 24, 7, 69, -33, -15, 52, 101, -16, -16, 56, -107, -25, -104, 58, -100, -77, -11, 91, 108, -17, 33, 53, 85, -66, 102, -65, -48, -78, 6, 94, -115, -103, -64, 73, -28, 19, 56, 5, 90, -32, 11, -25, 79, -79, -43, 45, 34, -112, -27, -96, -104, -87, -73, 25, 12, -104, 61, 81, 36, 117, -54, 30, -52, 61, 70, 8, 74, -74, -43, 6, -27, -18, 78, -84, -119, 103, 97, 29, 51, -28, 123, -21, 93, 54, 7, -61, 119, -24, -86, -73, -123, -15, 77, -43, -26, 70, -114, 104, 39, 39, 110, -72, -104, 49, 114, -119, -52, 82, -20, 45, 77, 79, -15, 100, -1, -118, -13, 118, 17, -56, 24, -81, -33, 118, 96, 37, -99, 36, -106, 121, 96, 38, -97, 26, 64, -124, 19, -3, -106, -85, -18, 84, -35, 76, -56, -58, 109, -31, -1, -100, 28, -80, -13, 92, 80, 27, 20, -60, 24, 43, 84, 54, 17, -16, -106, 15, 50, -67, 102, -93, -52, -36, -54, -7, 26, -120, 83, 118, 68, -29, -75, 100, 97, -21, -114, 72, -43, 54, 45, -5, 106, -57, 112, -49, 88, 66, 84, -29, -51, 118, 52, -34, 118, 71, -46, 10, 1, 28, 75, -86, 54, -76, -6, 93, -68, -11, 68, 33, -61, -16, 106, -79, -17, 98, -38, -70, -12, -28, 65, 109, 17, 29, 98, 104, 21, -94, -5, -23, -114, 43, 48, 13, 15, 83, -46, 71, 47, 52, 25, 0, -5, -96, -81, 25, 91, -54, 43, -9, 34, 21, 123, 33, 50, 63, 67, 28, -37, -78, -104, 71, -38, -17, 120, -28, -113, 79, -93, -16, -116, 64, 47, -25, -55, -57, -20, -88, 120, 14, 51, -102, 35, 50, -73, -13, -86, -81, -67, 9, -76, -65, 73, 78, 80, 83, 118, -105, -97, -68, 27, -62, 94, -69, 9, -88, 17, -3, 89, 10, 92, 96, -32, -121, -70, 117, -59, -44, -99, -101, 113, 39, -17, 8, -29, 49, -74, 54, 91, 123, -3, 71, 123, 112, -51, 0, 15, 88, 101, 46, 83, 117, -3, -96, -44, -76, -44, 39, 
  -71, -120, 120, -57, 58, -42, 62, 75, 11, -44, -102, -21, -99, -32, 11, -18, -65, -56, -51, -70, 26, 51, -69, 43, 70, 5, -90, -16, -50, 7, 19, -3, 86, 80, 98, -117, 31, 11, -89, -40, 0, -96, 84, -108, -46, -1, 76, -118, 85, 12, -92, 7, 71, 58, -20, -55, -45, 13, 88, 94, -118, 75, -28, -32, -114, 8, 71, 106, -89, -109, 86, -19, 95, 4, -37, 34, 97, -13, -32, -6, 57, -112, -51, 56, -46, 73, -27, 64, -94, -69, 35, 122, 78, -93, 69, -10, -116, -30, -1, -63, -66, -61, -122, -38, -80, -87, -58, -91, 97, 99, -120, 59, 30, 26, -39, -57, 58, 15, -49, -104, -36, -37, -37, 42, -3, -103, -119, -112, -70, 84, -90, -39, -20, 14, 53, 52, -66, 38, 82, -49, 64, 13, -31, 43, 25, 8, -33, 3, 82, 22, 117, -112, -118, 39, 3, -59, -96, 30, -104, 62, 105, -64, -43, 118, 111, -98, -109, 56, 43, 54, -81, 122, -49, 34, 15, -119, -106, 59, -19, 31, 115, 9, 21, 25, 14, -67, 64, -82, -85, 16, -90, -101, -36, 16, 73, -60, 20, 23, 68, -108, 48, 47, 47, 30, 110, -95, -99, 104, -97, 36, 89, 88, -76, -58, 21, -96, 55, -55, 48, 44, -32, 45, 97, 83, -36, -95, 63, -1, -91, -115, -55, -33, 96, 13, 116, -9, 105, -93, -78, 97, 122, -3, -26, 4, -13, -49, -33, -91, 109, -86, -61, -109, -33, -57, 73, -9, 55, -49, 93, 75, -123, -81, 112, -46, -89, 35, -97, -105, 8, 43, 84, -71, 1, 104, -17, -84, -21, 115, 115, -37, -79, 114, 46, -48, 60, 67, 77, 74, -65, -13, -94, -48, -81, -10, -98, -48, 77, -112, -101, 24, -1, -119, -77, -61, -121, 1, 92, 86, 0, -15, -70, 104, -109, 60, 78, 58, -61, 50, 43, 74, 106, 100, -116, -27, 18, -73, -46, 1, 121, -8, 31, 107, -109, -56, 58, -97, 46, 16, 104, 120, 99, -49, 4, 122, -15, 40, -57, 114, -99, 31, 95, 64, 89, -10, -48, -4, 46, 44, -103, 112, -101, 107, 121, 118, 86, 74, 74, -40, -120, 15, -110, -26, 54, -95, 9, 95, 92, -5, 25, 97, -18, -49, -117, 18, -99, -92, 48, -75, 121, -62, -103, -1, 91, 49, 49, 74, -82, 88, -117, -65, 22, -38, -5, -66, -92, 90, 55, 62, -78, 100, 121, 63, 100, -72, -114, 68, 93, 113, -34, 39, -52, 29, -81, 39, 9, -113, 22, -4, -8, 110, -4, 120, -80, -98, 74, 121, -44, -84, 44, -30, 22, 73, -36, 67, -107, -44, 9, 61, -108, 26, 91, -110, 57, -85, -14, -39, -46, -35, 57, 82, 5, 116, 32, -13, 98, 86, 84, 69, 38, -37, -40, 30, -8, 88, -28, 16, -52, 108, -21, -108, 51, 109, 53, 51, -98, -3, 74, -80, 46, 69, 42, -67, -77, 22, 13, -68, -109, -5, 61, 59, -5, -12, 56, -36, -49, 11, 56, -94, -94, -65, 5, 38, 2, -76, -47, 36, -79, 100, -54, 119, 2, 118, 120, 26, 53, 44, -62, 23, -23, -105, 5, 98, -101, -105, 42, 75, -12, 7, 40, 48, -65, -31, 1, 123, -108, -118, -48, 78, -35, -22, 69, -5, -119, 81, -5, 81, -60, 18, 17, 116, 109, -75, 76, -67, -46, 47, -30, 60, 70, -34, 101, 112, -100, 103, 56, 44, 5, -15, -71, -112, -66, 98, 3, 53, 43, 69, 24, 112, 39, 41, 28, -61, 2, 94, -28, 55, -56, 4, 58, -120, 48, 107, 28, -117, -93, 77, -3, -1, 93, 110, -122, 19, 
  -77, 119, -40, 39, -27, 103, -76, -57, -20, 95, -68, 53, -51, -32, 117, -95, -7, 80, 72, 86, 26, -56, 32, -100, -58, -33, 70, 41, 14, 8, -115, -96, -109, 68, 81, -42, -34, 78, -8, 88, 105, -73, 93, -11, -51, 68, -110, 111, -47, 84, -18, 64, 32, 38, 21, 70, -17, -52, -15, -102, 68, -61, -93, -47, -6, 55, -69, -105, -116, -38, 102, -23, 28, -59, -52, 89, -48, -53, -89, 122, 21, 113, 80, -66, -38, -109, -59, 58, 67, 110, -103, -6, 1, -48, 60, -5, -113, -47, -9, -1, -53, -111, 29, -50, 16, 107, -47, 7, 39, -9, 109, 66, -119, 86, 107, -51, -67, 117, 97, -84, 37, 120, 86, 108, 8, -13, 16, -14, -88, -71, -53, -14, -59, -2, -15, -35, 13, -24, 81, -56, -87, -30, -117, 25, -44, 35, -27, 13, 117, -106, -113, -26, 118, -71, -73, -124, 93, -32, 59, -56, -114, 38, -113, 70, 15, -121, 78, -119, -110, -36, 102, 75, 7, -118, -21, 59, 81, -14, 70, 52, 52, -34, 33, 95, 22, -118, 57, 0, -125, 79, 21, -70, 118, 65, 86, 85, -53, 72, 40, 102, -75, -23, 62, 41, 17, 51, -96, 18, -115, -4, -22, -112, -25, 19, 42, -78, 75, 125, -1, 104, 54, -68, -96, 50, -99, -46, 1, 91, 26, 2, 42, 0, 80, -93, 26, 44, 110, -29, 113, 47, 21, 10, -5, -40, 61, -115, -63, 43, 98, 96, -68, -119, -82, -118, 65, -52, -102, 90, -120, 111, 1, 18, 92, -81, 34, 78, -79, -120, 78, 73, -30, 67, -49, 38, 113, -67, 58, -91, 102, 22, -23, 103, 44, -105, 4, 101, -29, -98, 39, -79, -83, -33, -12, -31, -63, -119, 116, -4, 61, 12, 71, 9, 59, -47, 84, -51, -67, -33, 78, -33, 98, 89, -77, 78, 104, 7, 30, 25, 108, -27, -49, 88, -57, 20, 57, 79, -90, -11, -74, 102, -49, 24, 26, 110, -87, 16, -18, 41, -60, 35, 71, 4, -34, 19, 14, 40, -45, -57, -85, 94, -41, 83, -52, 101, -100, -44, -7, 93, 69, -102, 27, -88, -11, -98, 50, -106, -71, 115, 24, -99, 20, 8, -83, 34, -114, -46, 67, -80, 66, 43, -67, 91, -105, 24, 83, -105, 106, -27, 112, 4, 26, -111, 53, 28, -51, 12, 22, -87, -57, -64, -79, 69, -33, -28, 8, 71, 105, -5, 0, -21, -51, -124, -61, -94, -122, 111, -37, -93, -14, -56, 86, 89, -20, 13, 41, -50, -95, 51, -72, 113, -89, 100, -121, -72, -84, -63, -98, 31, 42, 39, -26, 35, 69, -59, -15, -88, 0, -116, -77, -81, 8, 37, -23, 57, -44, 42, -86, 26, 30, 39, -77, -50, 77, 30, -92, 61, -73, 83, -54, 74, 33, 9, -9, -28, -9, 68, -28, -91, 50, -88, -122, 4, 33, -39, 95, 24, 39, -119, 85, 79, -9, 95, -121, 89, -104, -50, -54, -99, 102, -102, -122, 4, -50, -29, 64, 6, 11, 100, -86, -6, 61, 88, -41, -16, -101, 29, 92, 82, 100, -83, 62, 119, 62, 125, -103, -16, 86, -125, 5, 71, 53, 13, -13, -117, 58, 76, 75, -37, 112, 67, -120, 112, -80, -18, -104, -10, 63, 3, -82, 94, -28, 88, -34, -78, -51, 49, 124, -50, 110, -20, -50, 81, 4, 101, -38, -15, -45, 22, -93, -96, -5, 36, -108, 107, 77, 23, -96, 14, -66, 2, 66, 92, -22, -74, -13, 45, 4, 17, -68, -65, -52, -42, 48, 17, 25, -2, 22, -78, -69, 52, 64, 98, -47, -92, 97, -84, -23, -9, 85, -79, -42, -59, 
  -86, 100, 75, 25, -8, 2, -9, -61, -12, 42, 1, -96, -64, -112, -76, 62, 81, 61, -97, -18, -55, -105, -58, 94, 80, 43, -24, 19, 117, 115, 13, -25, -9, 81, 26, 36, -7, -43, -93, 53, 29, 121, -65, -93, 55, 42, 58, 88, 120, 28, 109, 100, -24, 37, -26, 13, -97, -13, 4, -50, -48, -44, -26, 118, -32, -38, -13, 38, 8, 123, -50, -91, 84, -22, 31, -108, 94, 33, 70, 114, 62, 124, 44, -113, 47, 56, 6, -78, 44, -29, -107, 95, 106, 72, -72, -57, 107, 79, 125, 87, 119, 75, -104, -15, 46, 26, -113, 49, 53, -6, 87, -58, -70, -101, 42, -75, -105, 41, 19, 103, 42, -121, -29, 115, 52, 0, -43, 46, -72, -76, 106, 75, -46, 74, 122, -108, -104, -15, -33, 108, 32, 71, -91, -65, 115, -34, -33, 69, 9, 18, 57, -2, -64, -68, -126, -74, -21, -18, -2, 12, 72, 124, 103, -106, -19, -87, -23, 59, 35, -122, 40, 103, 17, -118, 63, -14, 0, 118, -31, -117, -66, -87, 57, 83, -33, 97, -64, -22, 42, 77, -85, -4, -60, 11, 58, 35, -28, -23, -83, 104, 101, 66, 35, -55, -20, 2, -19, 67, 87, 61, -36, -106, -107, -99, -97, 65, -95, 14, -82, 84, 111, 10, 18, -13, -94, 41, -28, 124, -61, -122, -51, -23, 93, -91, 25, 73, -50, 73, 67, -98, 51, -52, 112, -38, 82, 120, -51, -30, 68, 3, -106, 33, -29, -19, -25, -66, -117, 1, 17, -92, -45, 78, -23, 110, 54, -105, 50, -111, -76, 114, -67, 86, 7, -16, 3, -14, -56, 79, -13, 26, 105, -38, -27, -115, -43, 13, -32, -33, -15, 19, -86, 22, 62, -49, -115, -38, -47, 67, 56, -56, -69, 100, 66, -105, -95, -54, 82, -68, -32, 86, -110, -8, 14, 28, -76, -54, 44, -81, -99, 92, 49, 41, -11, -80, -42, 30, -5, 19, -57, -18, 67, 28, -25, 31, 109, -76, -52, -42, 93, 1, -97, -2, 50, -48, -29, 97, 0, 87, 76, 93, -45, -18, -97, 44, 89, 14, 31, 41, -58, -43, 0, -88, 102, 0, 51, -44, -60, -57, -55, 28, -75, -101, -80, 86, -94, -82, -20, 13, -102, 83, 28, 67, 111, -101, -17, -102, 44, -19, 32, -42, -53, -125, -96, -12, 61, -90, 49, -18, 111, 27, 44, 80, 12, 28, -18, -39, 92, -98, 2, 91, -43, 127, 94, -46, -18, 41, 31, -4, 64, 67, 84, 17, 15, 42, -93, 83, -57, 53, -113, -26, -14, 33, 85, 73, -24, 61, 78, -16, -92, 85, -1, -83, -8, 1, -90, 111, -86, 40, 98, -33, 3, -68, -54, -107, -7, 32, -5, 67, -54, -97, -119, 26, 5, 64, 18, 69, 55, 34, -58, 102, -20, 77, -50, -30, 38, -46, -9, 1, -48, -116, 114, -94, -42, 23, 17, -64, -61, -82, -116, -70, -76, 6, 2, -101, -50, -29, -43, -31, 124, -121, -63, 12, -46, -88, 94, 61, -64, 54, 25, 99, -29, 77, 19, 109, 109, 11, 110, 77, -120, 100, -90, -51, 11, 3, 51, -47, -10, 89, -63, 108, -25, -41, 33, 109, -87, -27, -39, 88, -86, -84, -116, -104, 42, 24, -78, -86, -12, 50, 13, 6, 77, 28, -23, 39, 2, 6, -58, 24, 75, -100, -10, -75, 76, -74, 114, -81, -18, -58, -92, 37, -57, -82, -81, 32, -75, 37, -2, -57, 32, -9, -32, -16, 109, 14, 9, -118, -111, -18, 82, 41, 110, -26, 91, 43, 79, -29, 98, 4, -55, 67, 12, -107, 62, 20, -100, 47, 102, 35, 64, -85, 15, 50, 
  -56, 8, -116, -106, 108, -52, 18, 87, -70, 8, 12, 51, 23, -36, -20, -37, 6, -20, -66, 98, -111, -36, 69, -99, 105, -13, -86, 116, 72, 62, 69, 23, 21, 26, -107, -113, 108, 22, -100, 20, -93, 77, -94, 94, 115, 108, 76, 104, 11, -86, -51, 78, -55, 109, 112, -79, -12, -38, 49, -100, 90, -29, 79, 91, 105, -37, -45, -51, -13, 23, 91, 81, -119, -106, 57, 89, -100, -42, 74, -112, 81, -121, -51, -120, 84, -6, 108, -107, -56, -85, 9, -90, -98, 94, 119, -66, 73, -88, 69, 66, 38, 120, 104, -63, 11, -29, -25, 57, -32, -55, 87, 100, 97, 21, 59, 61, 21, -63, 124, 46, -17, 57, 51, 120, -48, -72, -81, -43, -5, -69, -54, 42, 117, 117, 104, 73, -64, 61, 114, -28, 112, -115, 98, 16, 38, 68, 50, -15, -17, 53, 31, 86, 41, -53, -65, -106, -2, -3, -49, -19, 40, 10, 42, -108, 77, -58, -88, -80, -52, -44, 18, 99, -113, 85, 91, -58, 24, -94, -99, -92, -28, 5, 67, -54, -69, -13, 34, -57, 88, -76, -88, 6, -66, 99, -25, -88, -65, 2, -103, 72, 0, -22, 100, 106, -112, -84, 9, 119, -42, 2, -26, 63, 75, -7, 0, -115, -109, 20, -123, 90, 52, -44, -38, -23, 37, 84, -68, -18, 95, -60, -25, 40, 61, 46, -96, 3, 47, -73, 54, -30, 0, -76, 110, 47, 1, 13, -73, 24, -87, -103, 48, -83, -5, -45, 61, 20, 70, -118, -102, 123, -74, -61, -65, 79, 111, -119, 119, -76, -38, 73, 34, -88, -114, 65, -35, -119, -44, 105, 90, 90, 6, -24, 69, 8, -8, -3, -75, -54, -110, 25, 89, 92, -22, 116, -44, -107, -109, 44, -107, 70, 75, 55, -60, 16, 91, 89, -12, 94, -92, 99, -44, -78, -109, 117, -65, -60, -24, 95, 96, 28, 104, -12, -111, 80, -48, -47, 6, -29, 87, -61, -7, -65, -24, 59, 31, 34, -52, -21, -75, -105, -21, -115, 115, -79, 104, -13, 54, -17, -38, 61, 77, 37, 114, -46, -118, 55, 36, 0, 118, 94, -104, -62, -76, 99, -69, 112, 57, -12, -33, 98, 1, -74, -90, 99, -119, -53, -116, -26, 45, 18, -30, -20, 92, 110, 32, -55, 103, -107, 97, -18, 68, -41, 56, -88, 19, 117, -28, -99, 116, 80, -50, 6, 12, 122, -81, -114, -94, -117, -117, 48, 90, 3, 52, -89, 16, -116, 79, 89, 67, 15, -28, 123, -101, -4, -11, -74, 11, 77, -20, 25, 16, -27, 87, -32, 12, 28, 103, -14, 46, 80, 109, -11, 19, 36, 83, -29, 61, -82, -53, -6, 110, 124, 121, -97, 122, 102, 47, -116, 79, 100, 86, -115, 5, -25, -12, 103, 84, 80, -36, -81, -25, 30, 47, 112, 25, -113, -57, 114, -91, 30, -66, -46, -94, 72, 64, 37, -32, 121, 23, 49, -55, 68, -48, -72, -54, -35, -92, -5, 72, 117, 20, -85, 30, 111, 115, 80, 51, 18, -28, 98, 28, -81, 28, 48, 16, 59, 95, 3, -11, -87, 81, -94, 23, -114, -39, 58, -52, -82, -48, -118, 93, 15, 86, -18, 8, -7, -79, -122, -95, 47, -66, -75, 14, -16, 11, -50, 39, 119, -70, 106, 100, 78, 74, -58, 102, 12, -120, 51, 46, 58, 73, 114, -89, -104, -117, -47, 94, 59, 1, -17, -22, -14, 58, 99, 107, 72, 112, -115, 86, 13, -18, 47, 60, 78, 43, -91, 26, 96, 63, 11, 71, -2, -21, -57, 4, -36, -116, 94, 59, -77, -24, 0, -104, 83, -80, -69, -32, -79, 55, -18, -28, 5, 
  -85, -24, 96, 103, 75, 45, -6, -80, -34, -33, -101, -83, 87, -10, -54, 81, -46, -21, -104, -19, 75, -108, -35, 118, -80, -100, 90, -36, 25, -9, 65, 48, 98, 9, 54, 77, 49, -13, 26, 70, -40, -120, 32, -46, 114, 91, -90, 53, 61, 11, 10, -105, -85, -55, 43, -85, 15, 45, -113, 36, 9, -29, 118, -101, 91, 44, -95, 109, -88, 66, 42, -65, -10, -98, 107, -77, -67, -71, 64, -64, -93, 61, -51, -111, -121, -61, 3, 26, -57, 22, -68, 113, 24, -63, 25, 104, 14, 120, -23, 24, -76, -66, -40, 111, -70, 53, -64, -44, 38, 62, -30, 112, 106, 107, 28, 62, 98, 95, 57, 95, 33, -30, -85, -74, 123, -43, -117, -45, -94, -90, 110, -106, -50, -32, -89, 11, -65, -14, -82, 118, 62, -51, 96, 97, 117, -83, 31, 62, -110, 17, 32, -86, 17, -11, -81, 96, -103, 70, -89, 48, 108, 101, -113, 51, -52, -73, 32, 44, -4, 79, 71, -31, 85, 76, -72, -77, 100, -10, 74, 44, -72, -82, 52, -37, -98, -39, 96, 80, -59, -52, -23, -56, -105, -11, 44, -53, -71, 79, 67, 74, -25, -60, -115, 15, 61, -19, 17, 76, -61, 103, -72, 112, -70, 31, 33, -56, -69, -105, -66, -54, -81, 55, -6, -40, 43, -108, 12, -4, -53, -115, -31, 43, 83, -45, 110, 87, 110, -1, 114, -112, 118, 44, 90, -95, -6, 35, 28, -45, 99, 94, -42, 116, -103, 85, -69, -28, -47, 92, -72, -39, -107, 38, 50, 5, 29, 72, 4, 41, -49, 10, 60, -47, -4, -121, -57, -71, 32, 71, 96, 78, 66, -78, 28, 21, 113, -56, 91, -51, 81, -47, 67, -90, 40, -45, -27, -22, 56, 91, 92, 16, 17, -6, -81, -44, -40, -29, -125, 8, 41, 6, -50, -24, -54, -18, 12, -25, 91, -113, -106, -23, -92, -105, 71, 73, 60, -4, -85, 36, 20, -106, 55, -37, 43, 108, 76, -90, 44, -50, 59, -116, 121, 49, 52, -12, 85, 3, -10, 53, -15, 7, 44, -124, 83, 4, 64, 93, 80, -122, 105, -98, 60, -94, 38, 71, -12, -31, -45, -120, 113, -114, -51, 113, 17, 62, 43, -3, -43, 6, 2, -11, 32, -123, -38, 63, 74, 17, -53, 67, 46, 1, 57, -88, -120, -40, -111, -43, -46, -50, 51, -31, 64, -3, -48, 100, -78, -110, -80, -117, 116, -20, 117, 102, 102, -47, 16, 94, 22, 51, 16, 92, -57, 95, 39, 45, -7, 95, -42, -27, -56, 86, 14, 34, 107, -93, -4, 67, -66, -115, 43, -3, 29, 78, -105, -102, 50, 120, -78, -79, -15, 56, -83, 118, 9, 45, 106, 91, -62, 89, 22, 50, 2, 43, 59, -33, -112, -24, 10, 98, -7, -29, 83, -23, -50, 36, -86, 40, 2, 113, -103, 94, -70, -113, -104, -112, 104, -71, 43, -58, 26, -105, -100, 69, 118, 90, 34, 106, 36, 109, 8, -30, -35, -112, 42, 75, 80, -9, -24, 50, -21, 4, 31, -116, 107, 76, -99, 28, -54, -90, 94, -58, -4, 34, -25, 32, -113, -31, -32, 37, 82, 111, -109, -107, -92, 47, -16, 1, 97, -74, 53, -98, 105, 4, -32, 62, -17, 86, 33, 67, 30, 83, 79, 77, 80, -108, 117, 113, -102, 107, -68, 14, 15, 97, 97, 33, -91, 68, 79, -112, -20, -79, -114, -27, -49, -94, 59, 91, 73, -93, 32, 36, 53, 1, -14, -17, 14, 14, -55, 93, 65, 10, -116, -59, -22, -57, 81, 108, -28, -12, -72, -94, 77, -40, -14, 54, 93, -123, 12, -20, -96, -94, 79, -86, 
  -39, 60, 79, 53, 30, -8, -3, -99, 103, 105, -24, 88, -12, -31, 96, 35, 33, -117, 30, -13, -42, 64, 110, -111, 78, 118, -7, 108, -103, -124, -119, -82, 118, 59, 44, 11, 92, -52, 59, -32, -90, -55, 108, 51, -74, 14, -12, 82, -59, -117, 100, 81, -33, -41, -47, 8, 96, -112, 24, -48, 27, -83, 30, -95, -62, 93, 110, 88, 12, -76, 95, -74, 7, -44, -109, 75, 68, 26, -38, 102, -4, 101, -19, 18, -108, 126, -13, 94, -105, 66, -41, 3, 54, -109, 75, 95, 31, 125, 118, 104, -20, 26, 80, 68, 78, -72, 18, 5, 4, 77, -82, -114, 125, 113, 27, -117, -55, 107, 83, 53, -26, 0, 72, 72, 72, 109, -83, -21, 114, 96, -117, 100, -34, 78, 67, -50, -38, -15, -65, -9, -94, 10, 91, -99, 42, -72, -31, 116, -103, 80, 87, -78, -120, -69, -105, -122, -101, 86, 108, 118, -114, 2, 115, 21, -105, -104, -55, -98, 68, 29, -54, -11, 73, -93, 16, -64, -27, -78, -92, -127, 7, 102, -10, -124, -32, 4, -103, -11, -59, -56, -86, 27, -31, -76, -73, -44, 80, 5, -122, -13, 14, -4, -47, 78, 50, -95, -52, -12, -66, 15, -90, -106, 100, 61, 63, -99, -68, 49, 70, 81, -82, 27, -117, -21, 100, 25, -38, -90, -97, 118, -59, 56, -10, -8, 59, 91, 113, -44, -107, -33, 80, 98, 3, 87, 82, -127, 26, -26, -81, -42, 104, -73, -33, 64, 62, 109, 31, -17, -96, 88, 108, -30, 106, -2, -24, -47, -32, 11, 79, 13, 15, 28, -54, 106, 117, -9, -36, -101, 112, 15, -31, -65, -11, 0, -40, 29, -17, 105, 81, -92, 103, 91, -109, -7, 16, 56, -29, -120, 69, 21, 4, 1, -94, -1, -107, 104, -89, -105, -43, 107, -9, -64, -71, 51, 105, 94, 12, -36, 80, -33, 25, 118, 11, -94, -32, 16, 49, -50, 81, -29, -57, -114, -30, -31, 59, -82, -49, 114, 55, -67, 59, 15, -83, -8, -52, -18, -82, -25, 7, 101, 65, -84, 1, -7, 0, 10, -126, -93, 10, 102, 16, -103, -119, -2, 119, 71, 69, 31, -59, -1, 12, -113, -10, -27, -10, -124, -78, 31, -76, 66, 71, -2, -41, -15, -41, -53, 48, 57, -22, -28, -119, 101, -105, 25, -43, -93, 77, -50, 10, -24, 112, 109, -78, -35, -61, 22, -104, -3, 60, 97, -124, -100, -15, 29, -104, -105, -45, 47, -32, 0, 50, -71, 30, 68, 56, 113, -6, -57, -90, -24, 78, -76, -113, -71, 102, -117, 72, -102, 66, 35, 19, 56, -23, -4, 24, 43, 64, -79, 66, -34, -117, 126, -72, -110, 116, -26, 44, -54, 93, -103, -2, 35, 56, 5, -78, -84, -32, -11, -70, -33, 26, -78, 15, -115, -123, 117, 14, -123, 79, 10, 89, -78, 63, -104, 70, 15, -44, -112, -28, -5, -107, -33, 104, 83, -49, -113, 113, 50, 6, 90, 108, -115, 86, 89, 108, 102, -79, 84, 74, -35, -15, -110, -2, 103, -78, 32, -20, -68, 61, 57, 20, 110, -10, 70, 32, 68, 95, 15, 8, 15, -36, -58, -15, -3, -12, 65, 20, 41, 22, -127, -122, 101, 29, 67, 52, -29, 25, -106, 51, 28, 36, 51, -126, 107, -29, 54, 95, 25, 90, 44, -118, -59, -38, 108, 65, 60, 92, 18, -7, -28, 86, -52, -63, -107, 62, 72, 64, -51, 99, 100, 13, -63, 62, -76, 104, -85, 92, -86, -53, 58, -94, 46, 114, 79, -105, 17, 62, -75, 14, -71, 71, -27, -120, -94, 70, -50, -54, 33, -83, 55, 40, 26, 
};
const TfArray<2, int> tensor_dimension4 = { 2, { 20,612 } };
const TfArray<1, float> quant4_scale = { 1, { 0.0007952671148814261, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const ALIGN(8) int8_t tensor_data5[10*20] = { 
  -79, -4, 35, 21, 104, -75, -33, 22, -104, -113, -39, -69, 111, 100, -35, 1, -108, 17, -37, 15, 
  -81, 18, -63, 48, 30, 11, 86, -54, -45, -89, 20, -96, -30, -37, -96, -107, -50, 81, 59, -107, 
  -96, 85, 29, -62, 79, -1, 53, -55, 97, 94, -72, -56, 39, -116, 40, -40, -27, 122, -109, -37, 
  -82, -23, -76, -101, -18, 56, 78, 93, 108, -91, 94, 47, 2, -80, -30, 121, 26, 34, 32, -84, 
  18, 8, -67, -94, -123, 106, -43, -7, -73, 121, 6, -121, -107, 45, -20, 23, 23, -111, 120, 29, 
  75, 100, -98, 11, -85, -24, 4, -28, 117, -116, -127, 117, -95, 57, -62, 97, -106, -10, -106, 87, 
  97, -38, 13, 97, 77, -35, 14, 57, 52, 106, -60, 72, -124, -11, -9, -11, 48, -27, 44, -57, 
  -67, 111, -69, -118, -25, -20, -36, -100, 107, 82, 79, 113, -22, -6, -28, -47, -71, 20, -51, 55, 
  -85, 80, 8, 57, 115, -5, 69, -119, -27, -89, 50, 90, 109, 122, -21, 58, -98, 111, -2, 4, 
  -33, 40, 25, 95, -90, 74, 88, -68, 93, -43, -24, 38, -105, -40, -99, 27, 122, 116, -41, 114, 
};
const TfArray<2, int> tensor_dimension5 = { 2, { 10,20 } };
const TfArray<1, float> quant5_scale = { 1, { 0.0034799396526068449, } };
const TfArray<1, int> quant5_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const ALIGN(8) int8_t tensor_data6[2*10] = { 
  -38, -127, -11, -113, 8, -85, 57, 79, 1, 48, 
  74, -113, -12, 105, 103, 68, 59, -4, 29, -3, 
};
const TfArray<2, int> tensor_dimension6 = { 2, { 2,10 } };
const TfArray<1, float> quant6_scale = { 1, { 0.005526471883058548, } };
const TfArray<1, int> quant6_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const TfArray<2, int> tensor_dimension7 = { 2, { 1,20 } };
const TfArray<1, float> quant7_scale = { 1, { 0.95404511690139771, } };
const TfArray<1, int> quant7_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const TfArray<2, int> tensor_dimension8 = { 2, { 1,10 } };
const TfArray<1, float> quant8_scale = { 1, { 0.31213116645812988, } };
const TfArray<1, int> quant8_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const TfArray<2, int> tensor_dimension9 = { 2, { 1,2 } };
const TfArray<1, float> quant9_scale = { 1, { 0.32843053340911865, } };
const TfArray<1, int> quant9_zero = { 1, { 9 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const TfArray<2, int> tensor_dimension10 = { 2, { 1,2 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant10_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const TfLiteFullyConnectedParams opdata0 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs0 = { 3, { 0,4,1 } };
const TfArray<1, int> outputs0 = { 1, { 7 } };
const TfLiteFullyConnectedParams opdata1 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs1 = { 3, { 7,5,2 } };
const TfArray<1, int> outputs1 = { 1, { 8 } };
const TfLiteFullyConnectedParams opdata2 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs2 = { 3, { 8,6,3 } };
const TfArray<1, int> outputs2 = { 1, { 9 } };
const TfLiteSoftmaxParams opdata3 = { 1 };
const TfArray<1, int> inputs3 = { 1, { 9 } };
const TfArray<1, int> outputs3 = { 1, { 10 } };
const TensorInfo_t tensorData[] = {
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension0, 612, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant0))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data1, (TfLiteIntArray*)&tensor_dimension1, 80, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant1))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data2, (TfLiteIntArray*)&tensor_dimension2, 40, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant2))}, },
  { kTfLiteMmapRo, kTfLiteInt32, (void*)tensor_data3, (TfLiteIntArray*)&tensor_dimension3, 8, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant3))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data4, (TfLiteIntArray*)&tensor_dimension4, 12240, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant4))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data5, (TfLiteIntArray*)&tensor_dimension5, 200, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant5))}, },
  { kTfLiteMmapRo, kTfLiteInt8, (void*)tensor_data6, (TfLiteIntArray*)&tensor_dimension6, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant6))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 624, (TfLiteIntArray*)&tensor_dimension7, 20, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant7))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension8, 10, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant8))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 16, (TfLiteIntArray*)&tensor_dimension9, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant9))}, },
  { kTfLiteArenaRw, kTfLiteInt8, tensor_arena + 0, (TfLiteIntArray*)&tensor_dimension10, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&quant10))}, },
};const NodeInfo_t nodeData[] = {
  { (TfLiteIntArray*)&inputs0, (TfLiteIntArray*)&outputs0, const_cast<void*>(static_cast<const void*>(&opdata0)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs1, (TfLiteIntArray*)&outputs1, const_cast<void*>(static_cast<const void*>(&opdata1)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs2, (TfLiteIntArray*)&outputs2, const_cast<void*>(static_cast<const void*>(&opdata2)), OP_FULLY_CONNECTED, },
  { (TfLiteIntArray*)&inputs3, (TfLiteIntArray*)&outputs3, const_cast<void*>(static_cast<const void*>(&opdata3)), OP_SOFTMAX, },
};
static std::vector<void*> overflow_buffers;
static TfLiteStatus AllocatePersistentBuffer(struct TfLiteContext* ctx,
                                                 size_t bytes, void** ptr) {
  if (current_location - bytes < tensor_boundary) {
    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    *ptr = malloc(bytes);
    if (*ptr == NULL) {
      printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return kTfLiteError;
    }
    overflow_buffers.push_back(*ptr);
    return kTfLiteOk;
  }

  current_location -= bytes;

  *ptr = current_location;
  return kTfLiteOk;
}
typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;
static std::vector<scratch_buffer_t> scratch_buffers;

static TfLiteStatus RequestScratchBufferInArena(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  scratch_buffer_t b;
  b.bytes = bytes;

  TfLiteStatus s = AllocatePersistentBuffer(ctx, b.bytes, &b.ptr);
  if (s != kTfLiteOk) {
    return s;
  }

  scratch_buffers.push_back(b);

  *buffer_idx = scratch_buffers.size() - 1;

  return kTfLiteOk;
}

static void* GetScratchBuffer(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > static_cast<int>(scratch_buffers.size()) - 1) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}
} // namespace

  TfLiteStatus trained_model_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;
  ctx.AllocatePersistentBuffer = &AllocatePersistentBuffer;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArena;
  ctx.GetScratchBuffer = &GetScratchBuffer;
  ctx.tensors = tflTensors;
  ctx.tensors_size = 11;
  for(size_t i = 0; i < 11; ++i) {
    tflTensors[i].type = tensorData[i].type;
    tflTensors[i].is_variable = 0;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    tflTensors[i].allocation_type = tensorData[i].allocation_type;
#else
    tflTensors[i].allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
    tflTensors[i].bytes = tensorData[i].bytes;
    tflTensors[i].dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
    if(tflTensors[i].allocation_type == kTfLiteArenaRw){
      uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

     tflTensors[i].data.data =  start;
    }
    else{
       tflTensors[i].data.data = tensorData[i].data;
    }
#else
    tflTensors[i].data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
    tflTensors[i].quantization = tensorData[i].quantization;
    if (tflTensors[i].quantization.type == kTfLiteAffineQuantization) {
      TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
      tflTensors[i].params.scale = quant->scale->data[0];
      tflTensors[i].params.zero_point = quant->zero_point->data[0];
    }
    if (tflTensors[i].allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tflTensors[i].data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }
  if (tensor_boundary > current_location /* end of arena size */) {
    printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }
  registrations[OP_FULLY_CONNECTED] = *tflite::ops::micro::Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = *tflite::ops::micro::Register_SOFTMAX();

  for(size_t i = 0; i < 4; ++i) {
    tflNodes[i].inputs = nodeData[i].inputs;
    tflNodes[i].outputs = nodeData[i].outputs;
    tflNodes[i].builtin_data = nodeData[i].builtin_data;
    tflNodes[i].custom_initial_data = nullptr;
    tflNodes[i].custom_initial_data_size = 0;
    if (registrations[nodeData[i].used_op_index].init) {
      tflNodes[i].user_data = registrations[nodeData[i].used_op_index].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
    }
  }
  for(size_t i = 0; i < 4; ++i) {
    if (registrations[nodeData[i].used_op_index].prepare) {
      TfLiteStatus status = registrations[nodeData[i].used_op_index].prepare(&ctx, &tflNodes[i]);
      if (status != kTfLiteOk) {
        return status;
      }
    }
  }
  return kTfLiteOk;
}

static const int inTensorIndices[] = {
  0, 
};
TfLiteTensor* trained_model_input(int index) {
  return &ctx.tensors[inTensorIndices[index]];
}

static const int outTensorIndices[] = {
  10, 
};
TfLiteTensor* trained_model_output(int index) {
  return &ctx.tensors[outTensorIndices[index]];
}

TfLiteStatus trained_model_invoke() {
  for(size_t i = 0; i < 4; ++i) {
    TfLiteStatus status = registrations[nodeData[i].used_op_index].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus trained_model_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif
  scratch_buffers.clear();
  for (size_t ix = 0; ix < overflow_buffers.size(); ix++) {
    free(overflow_buffers[ix]);
  }
  overflow_buffers.clear();
  return kTfLiteOk;
}
